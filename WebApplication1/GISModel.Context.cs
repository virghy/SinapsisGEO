//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class gisEntities : DbContext
    {
        public gisEntities()
            : base("name=gisEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Coord> Coord { get; set; }
        public DbSet<gis_calles> gis_calles { get; set; }
        public DbSet<gis_calles1> gis_calles1 { get; set; }
        public DbSet<gis_coordenadas> gis_coordenadas { get; set; }
        public DbSet<gis_Cuadrantes> gis_Cuadrantes { get; set; }
        public DbSet<gis_CuadranteSuc> gis_CuadranteSuc { get; set; }
    
        public virtual ObjectResult<BuscarCalle_Result> BuscarCalle(string cadena, Nullable<int> cantidad)
        {
            var cadenaParameter = cadena != null ?
                new ObjectParameter("Cadena", cadena) :
                new ObjectParameter("Cadena", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BuscarCalle_Result>("BuscarCalle", cadenaParameter, cantidadParameter);
        }
    
        public virtual int BuscarCuadranteNombre(Nullable<int> idEmpresa, string calle, Nullable<int> nro, string calle1, string calle2, ObjectParameter cuadrante, ObjectParameter idSucursal, ObjectParameter obs, ObjectParameter incluye)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var nroParameter = nro.HasValue ?
                new ObjectParameter("Nro", nro) :
                new ObjectParameter("Nro", typeof(int));
    
            var calle1Parameter = calle1 != null ?
                new ObjectParameter("Calle1", calle1) :
                new ObjectParameter("Calle1", typeof(string));
    
            var calle2Parameter = calle2 != null ?
                new ObjectParameter("Calle2", calle2) :
                new ObjectParameter("Calle2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BuscarCuadranteNombre", idEmpresaParameter, calleParameter, nroParameter, calle1Parameter, calle2Parameter, cuadrante, idSucursal, obs, incluye);
        }
    
        public virtual ObjectResult<string> TraerCoord(string cuadrante)
        {
            var cuadranteParameter = cuadrante != null ?
                new ObjectParameter("Cuadrante", cuadrante) :
                new ObjectParameter("Cuadrante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TraerCoord", cuadranteParameter);
        }
    }
}
